declare(strict_types=1);

namespace {{ namespace }};

use Illuminate\Contracts\Database\Eloquent\Castable;
use Illuminate\Contracts\Database\Eloquent\CastsAttributes;
use InvalidArgumentException;

class {{ class }} implements Castable
{
    /**
     * Get the caster class to use when casting from / to this cast target.
     *
     * @param  array  $arguments
     * @return mixed
     */
    public static function castUsing(array $arguments): CastsAttributes
    {
        return new class implements CastsAttributes
        {
            public function get(Model $model, string $key, mixed $value, array $attributes): Address
            {
                return new {{ class }}($attributes);
            }

            public function set(Model $model, string $key, mixed $value, array $attributes): array
            {
                return $value->toArray();
            }
        };
    }
}
