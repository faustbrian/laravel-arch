{
    "created": {
        "app\/Nova\/User.php": "<?php\n\nnamespace App\\Nova;\n\nuse Illuminate\\Http\\Request;\nuse Laravel\\Nova\\Fields\\ID;\nuse Laravel\\Nova\\Http\\Requests\\NovaRequest;\n\nclass User extends Resource\n{\n    \/**\n     * The model the resource corresponds to.\n     *\n     * @var class-string<\\App\\Models\\User>\n     *\/\n    public static $model = \\App\\Models\\User::class;\n\n    \/**\n     * The single value that should be used to represent the resource when being displayed.\n     *\n     * @var string\n     *\/\n    public static $title = 'id';\n\n    \/**\n     * The columns that should be searched.\n     *\n     * @var array\n     *\/\n    public static $search = [\n        'id',\n    ];\n\n    \/**\n     * Get the fields displayed by the resource.\n     *\n     * @param  \\Laravel\\Nova\\Http\\Requests\\NovaRequest  $request\n     * @return array\n     *\/\n    public function fields(NovaRequest $request)\n    {\n        return [\n            ID::make()->sortable(),\n        ];\n    }\n\n    \/**\n     * Get the cards available for the request.\n     *\n     * @param  \\Laravel\\Nova\\Http\\Requests\\NovaRequest  $request\n     * @return array\n     *\/\n    public function cards(NovaRequest $request)\n    {\n        return [];\n    }\n\n    \/**\n     * Get the filters available for the resource.\n     *\n     * @param  \\Laravel\\Nova\\Http\\Requests\\NovaRequest  $request\n     * @return array\n     *\/\n    public function filters(NovaRequest $request)\n    {\n        return [];\n    }\n\n    \/**\n     * Get the lenses available for the resource.\n     *\n     * @param  \\Laravel\\Nova\\Http\\Requests\\NovaRequest  $request\n     * @return array\n     *\/\n    public function lenses(NovaRequest $request)\n    {\n        return [];\n    }\n\n    \/**\n     * Get the actions available for the resource.\n     *\n     * @param  \\Laravel\\Nova\\Http\\Requests\\NovaRequest  $request\n     * @return array\n     *\/\n    public function actions(NovaRequest $request)\n    {\n        return [];\n    }\n}\n"
    },
    "deleted": [],
    "updated": []
}